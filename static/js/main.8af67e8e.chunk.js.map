{"version":3,"sources":["Button.js","App.js","reportWebVitals.js","index.js"],"names":["Button","className","this","props","number","React","Component","App","state","count","value","setState","parseInt","map","listItem","onClick","handleClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAYeA,E,4JATb,WACE,OACE,qBAAKC,UAAU,gBAAf,SACE,qBAAKA,UAAU,gBAAf,SAAgCC,KAAKC,MAAMC,e,GAJ9BC,IAAMC,WC6CZC,E,kDA1Cb,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CAACC,MAAM,GAFH,E,+CAMnB,SAAYC,GACVR,KAAKS,SAAS,CAACF,MAAMP,KAAKM,MAAMC,MAAQG,SAASF,O,oBAGnD,WAAU,IAAD,OAYP,OACE,gCACE,6BACGR,KAAKM,MAAMC,QAdN,CACV,CAACC,MAAM,KACP,CAACA,MAAM,KACP,CAACA,MAAM,KACP,CAACA,MAAM,KACP,CAACA,MAAM,KACP,CAACA,MAAM,KACP,CAACA,MAAM,KACP,CAACA,MAAM,KACP,CAACA,MAAM,MASCG,KAAI,SAACC,GACT,OACE,wBAAQC,QAAW,WAAK,EAAKC,YAAYF,EAASJ,QAAlD,SAA2D,cAAC,EAAD,CAAQN,OAAUU,EAASJ,oB,GAhChFL,IAAMC,WCQTW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8af67e8e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='language-item'>\r\n        <div className='language-name'>{this.props.number}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button","import React from 'react';\nimport './App.css';\nimport Button from './Button';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {count:0}\n    \n  }\n\n  handleClick(value){\n    this.setState({count:this.state.count + parseInt(value)})\n  }\n  \n  render() {\n    const list =[\n      {value:\"1\"},\n      {value:\"2\"},\n      {value:\"3\"},\n      {value:\"4\"},\n      {value:\"5\"},\n      {value:\"6\"},\n      {value:\"7\"},\n      {value:\"8\"},\n      {value:\"9\"}\n    ]\n    return (\n      <div>\n        <h1>\n          {this.state.count}\n          \n        </h1>\n\n        {list.map((listItem)=>{\n          return(\n            <button onClick = {()=>{this.handleClick(listItem.value)}}><Button number = {listItem.value}/></button>\n          )\n        })}\n        \n        \n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}